import { PolymerElement, html } from "./node_modules/@polymer/polymer/polymer-element.js"; const ukmpApp = document.createElement("ukmp-app"); document.body.appendChild(ukmpApp); const title = "UKM Penelitian Apps"; document.title = title; for (var scriptName = "script-" + Math.random().toString(36).substr(2, 5), nonce = Math.random().toString(36).slice(2), styles = document.getElementsByTagName("script"), i = 0; i < styles.length; i++)styles[i].setAttribute("nonce", nonce); var script = document.createElement("script"); script.setAttribute("nonce", nonce), script.setAttribute("src", "app.js"), script.setAttribute("id", scriptName), document.head.appendChild(script); for (var scripts = document.getElementsByTagName("script"), i = 0; i < scripts.length; i++)scripts[i].setAttribute("nonce", nonce); var newScript = document.createElement("script"); newScript.setAttribute("type", "text/javascript"), newScript.setAttribute("nonce", nonce), newScript.setAttribute("id", scriptName); var scriptContent = "// Tambahkan security policy untuk mencegah XSS\n"; scriptContent += "document.querySelector('html').setAttribute('content-security-policy', \"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline';\");", newScript.textContent = scriptContent, document.body.appendChild(newScript); class UkmpContainer extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.innerHTML = "\n      <style>\n        :host {\n          width: 100%;\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n      </style>\n      <slot></slot>\n    " } } customElements.define("ukmp-container", UkmpContainer); class UkmpApp extends PolymerElement {
  constructor() { super(), window.addEventListener("load", () => { const loadElement = this.shadowRoot.querySelector("ukmp-load"); loadElement.parentNode.removeChild(loadElement) }) } static get template() {
    return html`
    <style>
      :host {
        position: relative;
        --app-background-color: #f7f7f7; /* variabel kustom ditambahkan ke host */
        --app-border-radius: 10px; /* variabel kustom ditambahkan ke host */
      }
      .apps{
        background-color: var(--app-background-color); 
        border-radius: var(--app-border-radius); 
      }
      @media only screen and (max-width: 600px) {      
        .sidebar-menu {
          display: none;
        }
      }

    </style>
    <ukmp-container>
      <ukmp-header></ukmp-header>
      <ukmp-sidebar class="sidebar-menu"></ukmp-sidebar> <!-- Tambahkan elemen web "ukmp-sidebar" di sini -->
      <ukmp-content>
        <div slot="kartu-dep">
          <kartu-dep></kartu-dep>
        </div>
        <!-- Tambahkan konten utama pada elemen "ukmp-content" -->
        <div class="apps" slot="kartu-apps">
        <kartu-apps></kartu-apps>
        <!-- Tambahkan konten utama pada elemen "ukmp-content" -->
      </ukmp-content>
      <ukmp-load></ukmp-load>
      <ukmp-footer></ukmp-footer>
    </ukmp-container>
  `}
} customElements.define("ukmp-app", UkmpApp); class UkmpContent extends PolymerElement {
  static get template() {
    return html`
    <style>
      :host {
        display: block;
        padding: 16px;
      }
      @media only screen and (max-width: 600px) {      
        :host {
          display: flex;
          padding: 16px;
          width: 100%
        }
      }

    </style>
    <div id="container">
      <!-- Tambahkan shadow root pada elemen "ukmp-content" -->
      <slot name="kartu-dep"></slot>
      <slot name="kartu-apps"></slot>
      <!-- Tambahkan konten utama pada elemen "ukmp-content" -->
      <slot></slot>
    </div>
  `}
} customElements.define("ukmp-content", UkmpContent); class UkmpSidebar extends HTMLElement { constructor() { super(); const shadow = this.attachShadow({ mode: "open" }), aside = document.createElement("aside"), logo = document.createElement("ukmp-logo"); logo.setAttribute("icon", "../logo/ukmp-144x144.png"), logo.setAttribute("title", "Logo UKMP"), logo.setAttribute("arial-label", "Logo UKMP"); const list = document.createElement("ul"), data = [{ name: "Home", svg: '<ukmp-icon><svg viewBox="0 0 24 24"><g><path d="M4,10V21h6V15h4v6h6V10L12,3Z"></path></g></svg></ukmp-icon>', a: "./" }, { name: "Profile", svg: '<ukmp-icon><svg viewBox="0 0 24 24"><path fill="#000000" d="M12,2C8.69,2,6,4.69,6,8c0,1.76,0.81,3.33,2.06,4.4C6.38,13.24,2,15.9,2,18v2h20v-2c0-2.1-4.38-4.76-5.94-5.6C17.19,11.33,18,9.76,18,8C18,4.69,15.31,2,12,2z"/><path fill="#000000" d="M12,12c2.21,0,4-1.79,4-4s-1.79-4-4-4s-4,1.79-4,4S9.79,12,12,12z"/></svg></ukmp-icon>', a: "/about/" }, { name: "Prestasi", svg: '<ukmp-icon><svg viewBox="0 0 24 24" preserveAspectRatio="xMidYMid meet" focusable="false" class="style-scope yt-icon" style="pointer-events: none; display: block; width: 100%; height: 100%;"><g class="style-scope yt-icon"><path d="M18 5V2H6V5H4V6V10V11H6.01C6.07 13.53 7.63 15.78 9.97 16.64C9.98 16.64 9.99 16.64 10 16.65V19H9V20H8V22H16V20H15V19H14V16.65C14.01 16.65 14.02 16.65 14.03 16.64C16.36 15.78 17.93 13.54 17.99 11H20V10V6V5H18ZM6 10H5V6H6V10ZM19 10H18V6H19V10Z" class="style-scope yt-icon"></path></g></svg></ukmp-icon>', a: "/prestasi/" }, { name: "Berita", svg: '<ukmp-icon><svg viewBox="0 0 24 24" preserveAspectRatio="xMidYMid meet" focusable="false" class="style-scope yt-icon" style="pointer-events: none; display: block; width: 100%; height: 100%;"><g class="style-scope yt-icon"><path d="M3,3.03V21h14l4-4V3.03H3z M6,6h12v2H6V6z M13,15v-2h5v2H13z M13,12v-2h5v2H13z M12,18H6v-8h6V18z M16,16h3.99L16,19.99V16z" class="style-scope yt-icon"></path></g></svg></a></ukmp-icon>', a: "/berita/" }, { name: "Download", svg: '<ukmp-icon><svg viewBox="0 0 24 24" fill="#000000" preserveAspectRatio="xMidYMid meet" focusable="false"><g><path d="M17 18V19H6V18H17ZM16.5 11.4L15.8 10.7L12 14.4V4H11V14.4L7.2 10.6L6.5 11.3L11.5 16.3L16.5 11.4Z"></path></g></svg></ukmp-icon>', a: "/download/" }]; data.forEach(item => { const listItem = document.createElement("li"); listItem.innerHTML = item.svg; const itemText = document.createElement("a"), linka = document.createElement("span"); itemText.textContent = item.name, itemText.href = item.a, itemText.style.color = "#000", linka.href = item.a, linka.setAttribute("aria-label", item.name), linka.setAttribute("title", item.name), listItem.appendChild(itemText), itemText.appendChild(linka), list.appendChild(listItem) }); const style = document.createElement("style"); style.textContent = "\n      :host {\n       display: block;\n        width: 200px;\n        background-color: #f7f7f7;\n        height: 100%;\n        position: fixed;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        backdrop-filter: blur(20px);\n      }\n    \n      aside {\n        padding: 16px;\n      }\n    \n      ul {\n        margin: 0;\n        padding: 0;\n        list-style: none;\n      }\n    \n      li {\n        display: flex;\n        height: 48px;\n        align-items: center;\n        padding: 8px 16px;\n        cursor: pointer;\n        border-radius: 12px;\n        text-align: center;\n        margin: 8px;\n        justify-content: space-evenly;\n        transition: background-color 0.3s ease;\n      }\n    \n      li:hover {\n        background-color: rgba(0, 0, 0, 0.1);\n      }\n    \n      ukmp-icon {\n        position: fixed;\n        width: 24px;\n        height: 24px;\n        left: 20%;\n        fill: #888;\n        transition: transform 0.2s ease-in-out;\n      }\n      ukmp:hover {\n        transform: translateY(-2px);\n      }\n\n      p {\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n        color: #444;\n      }\n      \n      svg {\n        width: 100%;\n        height: 100%;\n        transition: transform 0.2s ease-in-out;\n      }\n      svg:hover {\n        transform: translateY(-2px);\n      }\n      a {\n        color: #888;\n        text-decoration: none;\n        position: fixed;\n        left: 45%;\n        transition: transform 0.2s ease-in-out;\n      }\n      a:hover {\n        transform: translateY(-2px);\n      }\n    ", shadow.appendChild(style), aside.appendChild(logo), aside.appendChild(list), shadow.appendChild(aside) } } customElements.define("ukmp-sidebar", UkmpSidebar); class UkmpHeader extends PolymerElement {
  static get template() {
    return html`
    <style>
    * {
      box-sizing: border-box;
      font-family: 'Roboto', sans-serif;
      margin: 0;
      padding: 0;
    }
    
    .header {
      width: 100%;
      height: 80px;
      background-color: #ffffff;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 50px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .logo img {
      height: 40px;
    }
    
    .menu a {
      margin-right: 32px;
      text-decoration: none;
      color: #333;
      font-weight: 500;
      font-size: 16px;
      transition: color 0.3s ease;
    }
    
    .menu a:hover {
      color: #4caf50;
    }    
    </style>
    <div class="header">
      <div class="logo">
        <img src="../logo/arunika.webp" alt="Logo">
      </div>
      <div class="menu">
        <a href="#" aria-label="Menu 1">Menu 1</a>
        <a href="#" aria-label="Menu 2">Menu 2</a>
        <a href="#" aria-label="Menu 3">Menu 3</a>
      </div>
    </div>
  `}
} customElements.define("ukmp-header", UkmpHeader); class UKMPKartu extends PolymerElement {
  static get template() {
    return html`
    <style>
      :host {
        display: block;
      }
      .card {
        background: linear-gradient(to bottom right, #ffffff, #f4f4f4);
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2),
             0px 6px 10px rgba(0, 0, 0, 0.1);
      }

      .card:hover {
        transform: translateY(-5px);
      }

      .card-header {
        font-size: 28px;
        font-weight: bold;
        margin-top: 0;
        margin-bottom: 10px;
      }
      .card-body {
        font-size: 16px;
        margin-top: 0;
      }
      .card-link {
        color: blue;
        font-weight: bold;
        text-decoration: none;
      }

      .card-link:hover {
        animation: shake 0.5s;
      }
     
      @keyframes shake {
        0% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        50% { transform: translateX(5px); }
        75% { transform: translateX(-5px); }
        100% { transform: translateX(0); }
      }
     
    </style>
    <div class="card">
      <h3 class="card-header">[[title]]</h3>
      <p class="card-body">[[description]]</p>
      <a href="[[url]]" class="card-link">Lihat Selengkapnya</a>
    </div>
  `} static get properties() { return { title: String, description: String, url: String } }
} customElements.define("ukmp-kartu", UKMPKartu); class kartuDep extends PolymerElement {
  static get template() {
    return html`
      <style>
      :host {
        display: block;
        margin: 20px;
      }
      .card-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(2, 1fr);
        grid-gap: 20px;
      }
    </style>
    <ukmp-header-card class="header">
    </ukmp-header-card>
    <div class="card-grid">
      <ukmp-kartu title="PH" description="PH" url="./ph"></ukmp-kartu>
      <ukmp-kartu title="HRD" description="HRD" url="./hrd"></ukmp-kartu>
      <ukmp-kartu title="DD" description="DD" url="./dd"></ukmp-kartu>
      <ukmp-kartu title="COMDEV" description="COMDEV" url="./cdv"></ukmp-kartu>
      <ukmp-kartu title="STD" description="STD" url="./std"></ukmp-kartu>
      <ukmp-kartu title="PRD" description="PRD" url="./prd"></ukmp-kartu>
    </div>
  `}
} customElements.define("kartu-dep", kartuDep); class UkmpApps extends PolymerElement {
  static get template() {
    return html`
    <style>
    :host {
      display: block;
    }
  
    .card {
      background: linear-gradient(to bottom right, #ffffff, #f4f4f4);
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2),
          0px 6px 10px rgba(0, 0, 0, 0.1);
    }
  
    .card:hover {
      transform: translateY(-5px);
    }
  
    .card-header {
      font-size: 28px;
      font-weight: bold;
      margin-top: 0;
      margin-bottom: 10px;
    }
  
    .card-body {
      font-size: 16px;
      margin-top: 0;
    }
  
    .card-link {
      color: blue;
      font-weight: bold;
      text-decoration: none;
    }
  
    .card-link:hover {
      animation: shake 0.5s;
    }
  
    @keyframes shake {
      0% {
        transform: translateX(0);
      }
      25% {
        transform: translateX(-5px);
      }
      50% {
        transform: translateX(5px);
      }
      75% {
        transform: translateX(-5px);
      }
      100% {
        transform: translateX(0);
      }
    }
  
    /* Styling for iframe */
    .iframe-container {
      position: relative;
      width: 100%;
      height: 0;
      padding-bottom: 56.25%;
      margin-bottom: 20px;
      border: none;
    }
  
    .iframe-container iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border: none;
    }
  </style>
  
  <div class="card">
    <h3 class="card-header">[[title]]</h3>
    <div class="iframe-container" border="0" hidden$="[[!showIframe]]">
      <iframe border="0" src="[[iframeSrc]]"></iframe>
    </div>
    <img src="[[imageSrc]]" alt="[[imageAlt]]" width="100%" loading="lazy">
    <p class="card-body">[[description]]</p>
    <a href="[[url]]" class="card-link">Lihat Selengkapnya</a>
  </div>  
    `} static get properties() { return { title: String, iframeSrc: String, imageSrc: String, imageAlt: String, description: String, url: String, showIframe: { type: Boolean, value: !1 } } } connectedCallback() { super.connectedCallback(); const iframe = this.shadowRoot.querySelector("iframe"); iframe.addEventListener("load", () => { iframe.hidden = !1 }) }
} customElements.define("ukmp-apps", UkmpApps); class kartuApps extends PolymerElement {
  static get template() {
    return html`
      <style>
        :host {
          display: block;
          margin: 20px;
        }
        .card-grid {
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          grid-template-rows: repeat(1, 1fr);
          grid-gap: 20px;
        }
        .header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 20px;
        }
        .left-header {
          font-weight: bold;
          font-size: 24px;
        }
        .right-header a {
          font-size: 16px;
          text-decoration: none;
        }
      </style>
      <div class="header">
        <ukmp-text class="left-header" text="Aplikasi Buatan Fungsio UKMP"></ukmp-text>
        <div class="right-header">
          <ukmp-text class="right-header" href="./kr" link-text="Lihat Selengkapnya"></ukmp-text>
        </div>
      </div>
      <div class="card-grid">
      <ukmp-apps title="IANS" description="Fajar" url="../ins/" iframe-src="https://ukmpapps.web.app/karya/ians/" show-iframe></ukmp-apps>
      <ukmp-apps title="TRANSFORMASI PANGAN..." description="Nining Hardyanti" url="../nr/" image-src="./karya/nutriwarrior/nrpost.png" image-alt="Gambar Nutriwarrior"></ukmp-apps>
      </div>
    `} getNonce() { const meta = document.querySelector('meta[property="csp-nonce"]'); if (meta) { const nonce = meta.getAttribute("style"); if (nonce) return nonce } const array = new Uint32Array(4); window.crypto.getRandomValues(array); const randomString = array.join(""); return `nonce-${randomString}` }
} customElements.define("kartu-apps", kartuApps); class UkmpHeaderCard extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.innerHTML = `\n      <style nonce="${this.getNonce()}">\n        .header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 20px;\n        }\n        .left-header {\n          font-weight: bold;\n          font-size: 24px;\n        }\n        .right-header a {\n          font-size: 16px;\n          text-decoration: none;\n          color: blue;\n        }\n      </style>\n      <div class="header">\n        <ukmp-text class="left-header" text="Departement UKMP"></ukmp-text>\n        <div class="right-header">\n          <ukmp-text class="right-header" href="./ab" link-text="Lihat Selengkapnya"></ukmp-text>\n        </div>\n      </div>\n    ` } getNonce() { const meta = document.querySelector('meta[property="csp-nonce"]'); if (meta) { const nonce = meta.getAttribute("content"); if (nonce) return nonce } const array = new Uint32Array(4); window.crypto.getRandomValues(array); const randomString = array.join(""); return `nonce-${randomString}` } } customElements.define("ukmp-header-card", UkmpHeaderCard); class UkmpText extends HTMLElement { constructor() { super(); const shadow = this.attachShadow({ mode: "open" }), style = document.createElement("style"); style.textContent = "\n      .ukmp-text {\n        font-size: 16px;\n        line-height: 1.5;\n      }\n    "; const text = document.createElement("span"); text.classList.add("ukmp-text"), text.textContent = this.getAttribute("text"); const link = document.createElement("a"); link.href = this.getAttribute("href"), link.style.color = "black", link.style.textDecoration = "none", link.textContent = this.getAttribute("link-text"), shadow.appendChild(style), shadow.appendChild(text), shadow.appendChild(link) } } customElements.define("ukmp-text", UkmpText); class UkmpFooter extends PolymerElement {
  static get template() {
    return html`
      <style>
        body {
          margin: 0;
          padding-bottom: 60px; /* memberikan jarak pada bagian bawah halaman sesuai tinggi footer */
        }
        
        .footer {
          width: 100%;
          height: 60px;
          display: flex;
          justify-content: center;
          align-items: center;
          position: fixed;
          bottom: 0;
          left: 0;
          background-color: rgba(255, 255, 255, 0.5);
          backdrop-filter: blur(10px);
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        
        p {
          margin: 0;
          font-size: 18px;
          background-clip: text;
          -webkit-background-clip: text;
          text-fill-color: transparent;
          background-image: linear-gradient(45deg, #ff00c8, #2c00ff);
        }
        
        
        a {
          color: #4285f4;
          text-decoration: none;
          transition: color 0.3s ease;
        }
        
        a:hover {
          color: #2e5aac;
        }
      </style>
      <div class="footer">
        <ukmp-cp>{{title}}</ukmp-c>
      </div>
    `} static get properties() { return { title: { type: String, value: "© UKM Penelitian UNNES " + (new Date).getFullYear() } } }
} customElements.define("ukmp-footer", UkmpFooter); class UkmpLoad extends PolymerElement {
  static get template() {
    return html`
      <style>
        :host {
          display: flex;
          justify-content: center;
          align-items: center;
          position: fixed;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          background-image: url('../logo/ukmp-logo-512x512.png');
          background-repeat: no-repeat;
          background-position: center;
          background-color: #fff;
          z-index: 9999;
        }
      </style>
      <slot></slot>
    `}
} customElements.define("ukmp-load", UkmpLoad);