const express=require("express"),admin=require("firebase-admin"),bodyParser=require("body-parser"),cookieParser=require("cookie-parser"),cors=require("cors"),Joi=require("joi"),app=express();app.use(bodyParser.json()),app.use(cookieParser()),app.use(cors({origin:!0}));const serviceAccount=require("ukmpapps-firebase-adminsdk-ye5jd-5a5fca0e70.json");admin.initializeApp({credential:admin.credential.cert(serviceAccount),databaseURL:"https://your-project-id.firebaseio.comhttps://ukmpapps-default-rtdb.firebaseio.com/"}),app.post("/login",async(req,res)=>{const{email:email,password:password}=req.body;try{const userRecord=await admin.auth().getUserByEmail(email),uid=userRecord.uid;await admin.auth().signInWithEmailAndPassword(email,password);const sessionCookie=await admin.auth().createSessionCookie(req.cookies.session||"",{expiresIn:3600});res.cookie("session",sessionCookie,{maxAge:36e5,httpOnly:!0,secure:!0}),res.json({uid:uid})}catch(error){res.status(401).json({message:"Authentication failed",error:error})}});const userSchema=Joi.object({email:Joi.string().email().required(),password:Joi.string().pattern(new RegExp("^[a-zA-Z0-9!@#$%^&*()_+]{8,30}$")).required()});app.use((req,res,next)=>{res.setHeader("Content-Security-Policy","default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'"),next()}),app.get("/protected",async(req,res)=>{try{const sessionCookie=req.cookies.session||"",decodedClaims=await admin.auth().verifySessionCookie(sessionCookie);res.json({message:"Protected page",uid:decodedClaims.uid})}catch(error){res.status(401).json({message:"Unauthorized",error:error})}}),app.listen(3e3,()=>{console.log("Server running on port 3000")});